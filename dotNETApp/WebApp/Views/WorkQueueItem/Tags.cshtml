@using Models
@model List<Models.WorkQueueItemModel>

@{
    ViewData["Title"] = "BP Work Queue Tags";
    string[] TableHeaders = new string[]
    {
    "Tag"
    ,"Item Key"
    ,"Loaded"
    ,"Status"
    ,"Completed Time"
    ,"Exceptioned Time"
    ,"Exception Reason"
    ,"Deferred Until"
    ,"Last Updated"
    };

    Layout = "_Layout";

}
<link rel="stylesheet" href="/css/table.css" />

<script>

    $(window).resize(function () {
        $(window).width();
    });
    $(document).ready(function () {
        $("#loaderDiv").show();
        set_table();
        $('#QueueItems tbody').on('click', 'tr.clickable-row', function () {
            var tr = $(this);
            var nextRow = tr.next('tr.collapsible');

            if (nextRow.length) {
                nextRow.toggle();
                $('#QueueItems').DataTable().columns.adjust().draw();
            }
        });
    });

    $('.changeBodyBackgroundFullColor').on('click', function () {
        if ($(this).attr('data-color') == 'default') {
            $('body').removeAttr('data-background-full');
        } else {
            $('body').attr('data-background-full', $(this).attr('data-color'));
        }

        $(this).parent().find('.changeBodyBackgroundFullColor').removeClass("selected");
        $(this).addClass("selected");
        layoutsColors();
    });

    $('.changeLogoHeaderColor').on('click', function () {
        if ($(this).attr('data-color') == 'default') {
            $('.logo-header').removeAttr('data-background-color');
        } else {
            $('.logo-header').attr('data-background-color', $(this).attr('data-color'));
        }

        $(this).parent().find('.changeLogoHeaderColor').removeClass("selected");
        $(this).addClass("selected");
        customCheckColor();
        layoutsColors();
    });

    $('.changeTopBarColor').on('click', function () {
        if ($(this).attr('data-color') == 'default') {
            $('.main-header .navbar-header').removeAttr('data-background-color');
        } else {
            $('.main-header .navbar-header').attr('data-background-color', $(this).attr('data-color'));
        }

        $(this).parent().find('.changeTopBarColor').removeClass("selected");
        $(this).addClass("selected");
        layoutsColors();
    });

    $('.changeSideBarColor').on('click', function () {
        if ($(this).attr('data-color') == 'default') {
            $('.sidebar').removeAttr('data-background-color');
        } else {
            $('.sidebar').attr('data-background-color', $(this).attr('data-color'));
        }

        $(this).parent().find('.changeSideBarColor').removeClass("selected");
        $(this).addClass("selected");
        layoutsColors();
    });

    $('.changeBackgroundColor').on('click', function () {
        $('body').removeAttr('data-background-color');
        $('body').attr('data-background-color', $(this).attr('data-color'));
        $(this).parent().find('.changeBackgroundColor').removeClass("selected");
        $(this).addClass("selected");
    });

    function customCheckColor() {
        var logoHeader = $('.logo-header').attr('data-background-color');
        if (logoHeader !== "white") {
            $('.logo-header .navbar-brand').attr('src', '/img/logo.svg');
        } else {
            $('.logo-header .navbar-brand').attr('src', '/img/logo2.svg');
        }
    }


    var toggle_customSidebar = false,
        custom_open = 0;

    if (!toggle_customSidebar) {
        var toggle = $('.custom-template .custom-toggle');

        toggle.on('click', (function () {
            if (custom_open == 1) {
                $('.custom-template').removeClass('open');
                toggle.removeClass('toggled');
                custom_open = 0;
            } else {
                $('.custom-template').addClass('open');
                toggle.addClass('toggled');
                custom_open = 1;
            }
        })
        );
        toggle_customSidebar = true;
    }
    function set_table() {
        const table = $("#QueueItems").DataTable({
            "pageLength": 5,
            initComplete: function () {
                this.api().columns().every(function () {
                    var column = this;
                    var select = $('<select class="form-control"><option value=""></option></select>')
                        .appendTo($(column.footer()).empty())
                        .on('change', function () {
                            var val = $.fn.dataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column
                                .search(val ? '^' + val + '$' : '', true, false)
                                .draw();
                        });

                    column.data().unique().sort().each(function (d, j) {
                        select.append('<option value="' + d + '">' + d + '</option>')
                    });
                });
            }
        });
    }
</script>

<link rel="stylesheet" href="/css/demo.css">
<h3>@ViewData["Title"]</h3>
<div class="content">
    <div class="page-inner">
        <div class="page-header">
            <h4 class="page-title">BP Work Queue</h4>
            <ul class="breadcrumbs">
                <li class="nav-home">
                    @{
                        if (Model != null && Model.Any())
                        {
                            <a href="javascript:void(0);" onclick="history.go(-1);">
                                <span class="icon-control-rewind">@Model[0].name</span>
                            </a>
                        }
                        else
                        {
                            <a href="javascript:void(0);" onclick="history.go(-1);">
                                <span class="icon-control-rewind">Back</span>
                            </a>
                        }
                    }
                    
                </li>
                <li class="nav-home">
                </li>
                <li class="nav-home">
                </li>
                <li class="nav-home">
                </li>
                <li class="nav-home">
                    <a href="/Home">
                        <i class="flaticon-home"></i>
                    </a>
                </li>
            </ul>
        </div>
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title" id="itemTitle">
                        Queue Item
                    </h4>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="QueueItems" class="display table table-striped table-hover">
                            <thead>
                                <tr>
                                    @{
                                        foreach (var head in TableHeaders)
                                        {
                                            <th>
                                                @head
                                            </th>
                                        }
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    if (Model != null && Model.Any())
                                    {
                                        TimeZoneInfo easternZone = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");
                                        foreach (var item in Model)
                                        {
                                            if (item.loaded.HasValue)
                                            {
                                                item.loaded = TimeZoneInfo.ConvertTimeFromUtc((DateTime)item.loaded, easternZone);
                                            }
                                            if (item.completed.HasValue)
                                            {
                                                item.completed = TimeZoneInfo.ConvertTimeFromUtc((DateTime)item.completed, easternZone);
                                            }
                                            if (item.exception.HasValue)
                                            {
                                                item.exception = TimeZoneInfo.ConvertTimeFromUtc((DateTime)item.exception, easternZone);
                                            }
                                            if (item.deferred.HasValue)
                                            {
                                                item.deferred = TimeZoneInfo.ConvertTimeFromUtc((DateTime)item.deferred, easternZone);
                                            }
                                            if (item.lastupdated.HasValue)
                                            {
                                                item.lastupdated = TimeZoneInfo.ConvertTimeFromUtc((DateTime)item.lastupdated, easternZone);
                                            }
                                            <script>
                                                document.getElementById("itemTitle").innerText = '@item.name'.replace(/'/g, "\\'");
                                            </script>
                                            <tr>
                                                <td>@item.tag</td>
                                                <td>@(item.keyvalue?.ToString() ?? "")</td>
                                                <td>@(item.loaded?.ToString("MM/dd/yyyy hh:mm tt") ?? "")</td>
                                                <td>@item.status</td>
                                                <td>@(item.completed?.ToString("MM/dd/yyyy hh:mm tt") ?? "")</td>
                                                <td>@(item.exception?.ToString("MM/dd/yyyy hh:mm tt") ?? "")</td>
                                                <td>@(item.exceptionreason?.ToString() ?? "")</td>
                                                <td>@(item.deferred?.ToString("MM/dd/yyyy hh:mm tt") ?? "")</td>
                                                <td>@(item.lastupdated?.ToString("MM/dd/yyyy hh:mm tt") ?? "")</td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan=@TableHeaders.Length - 1>
                                                <div>
                                                    No Tags Available at this moment.
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    @{
                                        foreach (var head in TableHeaders)
                                        {
                                            <th>
                                                @head
                                            </th>
                                        }
                                    }
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>